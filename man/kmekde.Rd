% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kmekde.R
\name{kmekde}
\alias{kmekde}
\title{Fits AFT Semiparametric Mixture Cure Models using novel KME-KDE method}
\usage{
kmekde(
  time,
  event,
  survPreds,
  curePreds,
  multiOptim_maxit = 1,
  multiOptim_reltol = 0.001,
  multiOptim_pStopLL = 0,
  reltolOptim = 1e-08,
  maxitOptim = 500,
  silent = FALSE,
  shooting = FALSE,
  reltolShoot = 1e-08,
  maxitShoot = 250,
  reltolShoot_beta = 1e-08,
  maxitShoot_beta = 500,
  reltolShoot_gamma = 1e-05,
  maxitShoot_gamma = 50,
  optim_method = "Nelder-Mead",
  optim_init = NULL,
  fix_gammacoef = NULL,
  fix_betacoef = NULL,
  bandcoef = 1
)
}
\arguments{
\item{time}{is the observed time to event variable}

\item{event}{is the status variable: 1 for event and 0 for censoring}

\item{survPreds}{is the matrix of survival predictor variable(s)}

\item{curePreds}{is the matrix of curing predictor variable(s)}

\item{multiOptim_maxit}{is the maximum of allowed multi-optimization. Suggestion: increase this number especially in the case of multiple predictors}

\item{multiOptim_reltol}{is the relative tolerance in continuing multi-optimization}

\item{multiOptim_pStopLL}{is an extra option for stopping multi-optimization. A proportion (between 0 to 1): 0 disable this stopping rule, 0.1 stop multi-optimization when the difference in latest loglik runs become less or equal to 0.1 of difference between loglik values in the first and second "optim" runs.}

\item{reltolOptim}{is the relative tolerance in continuing of each optimization run}

\item{maxitOptim}{is the maximum of allowed iterations in each optimization run}

\item{silent}{a Boolean value which if set to TRUE it prevent from showing output messages}

\item{shooting}{a Boolean value which if it is set to TRUE it uses a shooting method (coordinate descent) instead of the usual gradient descent algorithm to find the optimum of Gamma and Beta coefficients conditionally on the estimate of the other one.}

\item{reltolShoot}{is the relative tolerance in continuing the shooting algorithm optimization}

\item{maxitShoot}{is the maximum of allowed iterations in the shooting algorithm optimization}

\item{reltolShoot_beta}{is the relative tolerance in continuing optimization of the beta part in the shooting algorithm}

\item{maxitShoot_beta}{is the maximum of allowed iterations in the optimization of the beta part in the shooting algorithm}

\item{reltolShoot_gamma}{is the relative tolerance in continuing optimization of the gamma part in the shooting algorithm}

\item{maxitShoot_gamma}{is the maximum of allowed iterations in the optimization of the gamma part in the shooting algorithm}

\item{optim_method}{is the method of optimization: "Nelder-Mead" and "SANN" are supported}

\item{optim_init}{is an optional vector of initial values to be used in optimization. It can be used to speed up optimization in Bootstrapping by allowing to use of the estimated coefficients of the model fit to original data as Bootstrap fits initial values.}

\item{fix_gammacoef}{is an optional vector of fix gamma coefficients that could be used to estimate beta coefficients based of them. This can be used for conditional optimization.}

\item{fix_betacoef}{is an optional vector of fix beta coefficients that could be used to estimate gamma coefficients based of them. This can be used for conditional optimization.}

\item{bandcoef}{is an optional coefficient to multiply the optimal kernel smoothing band-width (Please note the loglik values resulted by applying different "bandcoef" are not comparable. So, changing the default value of this option is Not recommended.)}
}
\value{
a list of "exitcode" (0: no warning or error, 1: warning, 2 or 3: error), "coef" (estimated coefficients), "AIC", etc. check names(fit) for more information.
}
\description{
Fits Accelerated Failure Time (AFT) Semiparametric Mixture Cure Models using Kaplan-Meier Estimation and Kernel Density Estimation (KME-KDE).
}
\examples{
data(hfp)

fit = kmekde (time=hfp[,1], event=hfp[,2], survPreds=hfp[,-(1:2)], curePreds=hfp[,-(1:2)],
multiOptim_maxit = 100, multiOptim_reltol = 0.001)

names(fit)
if(fit$exitcode==0) fit$coef

}
